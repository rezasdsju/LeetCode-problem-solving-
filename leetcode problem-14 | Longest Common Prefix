#Solution-01
from typing import List
class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        s=strs
        if len(s)==1 and s[0]=='':
            return ''
        if len(s)==1 and s[0]!='':
            return s[0]
        a=s[0]
        for i in range(len(s)-1):
            matches=[]
            for j in range(min(len(a),len(s[i+1]))):
                if a[0:j+1]==s[i+1][0:j+1]:
                    match=s[i][0:j+1]
                    matches.append('yes')
                else:
                    matches.append('no')
            if any(t=='yes' for t in matches):
                a=match
            if all(t=='no' for t in matches):
                return ''
        return match
strs=["flower","flow",'flowerw'"flight",'f','fltoie','fo']
print(Solution().longestCommonPrefix(strs))




#Solution-02
from typing import List
class Solution:
    def longestCommonPrefix(self,strs:List[str])->str:
        if not strs:
            return ""
        prefix=strs[0]
        for i in range(1,len(strs)):
            while strs[i].find(prefix)!=0:
                prefix=prefix[:-1]
            if not prefix:
                return ""
        return prefix
strs = ["flower","flow","flight",'flee','float']
print(Solution().longestCommonPrefix(strs))
