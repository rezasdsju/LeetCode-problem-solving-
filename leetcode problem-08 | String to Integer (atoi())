#Solution-01
class Solution:
    def myAtoi(self, s: str) -> int:
        if s.strip()=='':
            return 0
        s=s.strip()
        if s[0]=='-':
            sign=-1
        elif s[0]=='+':
            sign=+1
        else:
            sign=+1
        if len(s)>1:
            if (s[0]=='-' or s[0]=='+') and s[1]=='0':
                s=s[2:]
        if s[0]=='0' or s[0]=='-' or s[0]=='+':
            s=s[1:]
        x=0
        for i in range(len(s)):
            if s[i] in ['0','1','2','3','4','5','6','7','8','9']:
                x=x*10+int(s[i])
            else:
                x=sign*x
                if x>=2147483647:
                    return 2147483647
                elif x<=-2147483648:
                    return -2147483648
                else:
                    return x
        x=sign*x
        if x>=2147483647:
            return 2147483647
        elif x<=-2147483648:
            return -2147483648
        else:
            return x

        
s="-91283472332"
print(Solution().myAtoi(s))


#Solution-02
class Solution:
    def myAtoi(self,s:str)->int:
        INT_MIN,INT_MAX=-2**31,2**31-1
        s=s.lstrip()
        if not s:
            return 0
        i,sign=0,1
        if s[0] in ['+','-']:
            if s[0]=='-':
                sign=-1
            i=i+1
        result=0
        while i<len(s) and s[i].isdigit():
            digit=int(s[i])
            if result>(INT_MAX-digit)//10:
                return INT_MAX if sign==1 else INT_MIN
            result=result*10+digit
            i=i+1
        return sign*result
        
s="-912872iou332"
print(Solution().myAtoi(s))
